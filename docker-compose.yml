# 🍌 BANANA-MCP Docker Compose
# 레오나르도 다 빈치 2075년 스타일 MCP 오케스트레이션

version: '3.8'

services:
  # 🍌 메인 BANANA-MCP 서버
  banana-mcp:
    build: .
    container_name: banana-mcp-main
    ports:
      - "8080:8080"  # HTTP MCP 서버
      - "8081:8081"  # YouTube MCP
      - "8082:8082"  # GitHub MCP
      - "8083:8083"  # Figma MCP
      - "8084:8084"  # Context7 MCP
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock  # Docker API 접근
    environment:
      # API 키들 (환경 변수로 주입)
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - CONTEXT7_API_KEY=${CONTEXT7_API_KEY}
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
      - FIGMA_ACCESS_TOKEN=${FIGMA_ACCESS_TOKEN}
      - MYSQL_CONNECTION_STRING=${MYSQL_CONNECTION_STRING}
      
      # 서비스 설정
      - MCP_MODE=docker
      - MCP_LOG_LEVEL=info
      - MCP_ENABLE_ALL_SERVERS=true
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - banana-network

  # 🗄️ MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: banana-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=banana_root_2075
      - MYSQL_DATABASE=mcp_db
      - MYSQL_USER=mcp_user
      - MYSQL_PASSWORD=mcp_secure_2025
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - banana-network

  # 🔴 Redis (캐싱 및 세션 관리)
  redis:
    image: redis:7-alpine
    container_name: banana-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - banana-network

  # 📊 Monitoring (Prometheus + Grafana)
  prometheus:
    image: prom/prometheus:latest
    container_name: banana-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - banana-network

  grafana:
    image: grafana/grafana:latest
    container_name: banana-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=banana2075
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - banana-network

  # 🌐 Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: banana-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - banana-mcp
    restart: unless-stopped
    networks:
      - banana-network

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  banana-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
